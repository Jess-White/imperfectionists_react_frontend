[{"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js":"1","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js":"2","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js":"3","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js":"4","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js":"5","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js":"6","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js":"7","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js":"8","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostShow.js":"9","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Navigation.js":"10","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserIndex.js":"11","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserNew.js":"12","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserUpdate.js":"13","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Login.js":"14"},{"size":677,"mtime":1610555346051,"results":"15","hashOfConfig":"16"},{"size":1477,"mtime":1611705297597,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609968287860,"results":"18","hashOfConfig":"16"},{"size":368,"mtime":1611706830943,"results":"19","hashOfConfig":"16"},{"size":3097,"mtime":1610734995793,"results":"20","hashOfConfig":"16"},{"size":1330,"mtime":1611699648503,"results":"21","hashOfConfig":"16"},{"size":1369,"mtime":1611189010582,"results":"22","hashOfConfig":"16"},{"size":2970,"mtime":1611098198207,"results":"23","hashOfConfig":"16"},{"size":0,"mtime":1609972184147,"results":"24","hashOfConfig":"16"},{"size":1726,"mtime":1611187132449,"results":"25","hashOfConfig":"16"},{"size":984,"mtime":1611092487389,"results":"26","hashOfConfig":"16"},{"size":2909,"mtime":1611099308035,"results":"27","hashOfConfig":"16"},{"size":2951,"mtime":1611101061522,"results":"28","hashOfConfig":"16"},{"size":0,"mtime":1611082491437,"results":"29","hashOfConfig":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1xd7ba4",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oalek4","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js",[],["67","68"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js",["69"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js",["70","71"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { createBlogPost } from '../Services/DatabaseCalls.js';\n\n\nexport default function BlogPostNew() {\n  const [title, setTitle] = useState(\"\");\n  const [blurb, setBlurb] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  // const [wordCount, setWordCount] = useState(\"\");\n  // const [likeCount, setLikeCount] = useState(\"\");\n\n  // const handleChange = (event) => {\n  //   const target = event.target;\n  //   const value = target.type === 'checkbox' ? target.checked : target.value;\n  //   const name = target.name;\n  //   setName(value);\n  // }\n\n  const resetValues = () => {\n    setTitle(\"\");\n    setBlurb(\"\");\n    setArtist(\"\");\n    setImageUrl(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      createBlogPost({\n        title: title,\n        blurb: blurb,\n        artist: artist,\n        image_url: imageUrl\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Add New Felix Valotton Content!\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control \n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              placeholder=\"title\"\n              type=\"text\"\n              name=\"title\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Blurb</Form.Label>\n            <Form.Control \n              value={blurb}\n              onChange={e => setBlurb(e.target.value)}\n              placeholder=\"blurb\"\n              type=\"text\"\n              name=\"blurb\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control \n              value={artist}\n              onChange={e => setArtist(e.target.value)}\n              placeholder=\"artist\"\n              type=\"text\"\n              name=\"artist\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control \n              value={imageUrl}\n              onChange={e => setImageUrl(e.target.value)}\n              placeholder=\"image url\"\n              type=\"text\"\n              name=\"imageUrl\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Add Blog Post\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js",["72","73","74"],"import React, {useState, useEffect} from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport { getBlogPosts } from '../Services/DatabaseCalls.js';\nimport Button from 'react-bootstrap/Button';\n\nexport default function BlogPostIndex() {\n\n  const [blogPosts, setBlogPosts] = useState([])\n  const [error, setError] = useState([])\n  let blogPostRequest\n  \n  useEffect(() => \n      {blogPostRequest = getBlogPosts()\n        .then(response => {\n          setBlogPosts(response)\n        }).catch(error => {\n          setError(\"Something went wrong.\")\n        })\n      }, []);\n\n  useEffect(() => {setBlogPosts(blogPostRequest)}, [blogPostRequest]);\n\n    if (!blogPosts.map) {\n      return <div>Loading...</div>\n    }\n    else {\n      return (\n        <div>\n          {blogPosts.map(blogPost => \n            <Card className=\"card\">\n              <Card.Header><h1>{blogPost.title}</h1></Card.Header>\n              <Card.Body>\n                <Image src={blogPost.image_url} style={{maxWidth: \"40%\", maxHeight: \"auto\"}} thumbnail fluid />\n                <h3>{blogPost.artist}</h3>\n                <h3>{blogPost.year}</h3>\n                <h3>{blogPost.like_count} visitors liked this painting.</h3>\n              </Card.Body>\n            </Card>\n          )}\n        </div>\n      );\n    }\n  };","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js",["75","76"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { updateBlogPost } from '../Services/DatabaseCalls.js';\n\n\nexport default function BlogPostNew() {\n  const [title, setTitle] = useState(\"\");\n  const [blurb, setBlurb] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  // const [wordCount, setWordCount] = useState(\"\");\n  // const [likeCount, setLikeCount] = useState(\"\");\n\n  const resetValues = () => {\n    setTitle(title);\n    setBlurb(blurb);\n    setArtist(artist);\n    setImageUrl(imageUrl);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      updateBlogPost({\n        title: title,\n        blurb: blurb,\n        artist: artist,\n        image_url: imageUrl\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Update Painting Info\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n        {/* <Form onSubmit={this.handleSubmit} ref={(el) => this.myFormRef = el}> */}\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control \n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              placeholder={title}\n              type=\"text\"\n              name=\"title\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Blurb</Form.Label>\n            <Form.Control \n              value={blurb}\n              onChange={e => setBlurb(e.target.value)}\n              placeholder={blurb}\n              type=\"text\"\n              name=\"blurb\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control \n              value={artist}\n              onChange={e => setArtist(e.target.value)}\n              placeholder={artist}\n              type=\"text\"\n              name=\"artist\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control \n              value={imageUrl}\n              onChange={e => setImageUrl(e.target.value)}\n              placeholder={imageUrl}\n              type=\"text\"\n              name=\"imageUrl\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Update Blog Post\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostShow.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Navigation.js",["77","78"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nfunction Navigation() {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n          <ul>\n              <div>\n              {localStorage.token && localStorage.user_id ? (\n                  <Nav className=\"mr-auto\">\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/blog_posts\">Gallery</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/blog_posts-new\">Hang Painting</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/users\">See Favorite Galleries</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                    ) : (\n                  <Nav>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/login\">Login</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/user-new\">Sign Up</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/user-update\">Update User</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                )}\n                </div>\n          </ul>\n        </Navbar>\n    );\n}\n\nexport default withRouter(Navigation);\n","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserIndex.js",["79","80","81","82"],"import React, {useState, useEffect} from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport { getUsers } from '../Services/DatabaseCalls.js';\nimport Button from 'react-bootstrap/Button';\n\nexport default function UserIndex() {\n\n  const [users, setUsers] = useState([])\n  const [error, setError] = useState([])\n  let userRequest\n  \n  useEffect(() => \n      {userRequest = getUsers()\n        .then(response => {\n          setUsers(response)\n        }).catch(error => {\n          setError(\"Something went wrong.\")\n        })\n      }, []);\n\n  useEffect(() => {setUsers(userRequest)}, [userRequest]);\n\n    if (!users.map) {\n      return <div>Loading...</div>\n    }\n    else {\n      return (\n        <div>\n          {users.map(user => \n            <Card>\n              <Card.Header><h1>{user.user_name}</h1></Card.Header>\n              <Card.Body>\n              </Card.Body>\n            </Card>\n          )}\n        </div>\n      );\n    }\n  };","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserNew.js",["83","84"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { createUser } from '../Services/DatabaseCalls.js';\n\n\nexport default function UserNew() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const resetValues = () => {\n    setUserName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setPasswordConfirmation(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      createUser({\n        userName: userName,\n        email: email,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Add New User!\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>User Name</Form.Label>\n            <Form.Control \n              value={userName}\n              onChange={e => setUserName(e.target.value)}\n              placeholder=\"userName\"\n              type=\"text\"\n              name=\"userName\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              placeholder=\"email\"\n              type=\"text\"\n              name=\"email\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder=\"password\"\n              type=\"text\"\n              name=\"password\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control \n              value={passwordConfirmation}\n              onChange={e => setPasswordConfirmation(e.target.value)}\n              placeholder=\"password confirmation\"\n              type=\"text\"\n              name=\"passwordConfirmation\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Add New User\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserUpdate.js",["85","86"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { updateUser } from '../Services/DatabaseCalls.js';\n\n\nexport default function UserUpdate() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const resetValues = () => {\n    setUserName(userName);\n    setEmail(email);\n    setPassword(password);\n    setPasswordConfirmation(passwordConfirmation);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      updateUser({\n        userName: userName,\n        email: email,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Update Your User Info\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>User Name</Form.Label>\n            <Form.Control \n              value={userName}\n              onChange={e => setUserName(e.target.value)}\n              placeholder={userName}\n              type=\"text\"\n              name=\"userName\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              placeholder={email}\n              type=\"text\"\n              name=\"email\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder={password}\n              type=\"text\"\n              name=\"password\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control \n              value={passwordConfirmation}\n              onChange={e => setPasswordConfirmation(e.target.value)}\n              placeholder={passwordConfirmation}\n              type=\"text\"\n              name=\"passwordConfirmation\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Update Info\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Login.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":12},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"97","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":14},{"ruleId":"91","severity":1,"message":"98","line":10,"column":10,"nodeType":"93","messageId":"94","endLine":10,"endColumn":15},{"ruleId":"99","severity":1,"message":"100","line":14,"column":26,"nodeType":"101","endLine":19,"endColumn":11},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"102","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"103","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":13},{"ruleId":"91","severity":1,"message":"97","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":14},{"ruleId":"91","severity":1,"message":"98","line":10,"column":10,"nodeType":"93","messageId":"94","endLine":10,"endColumn":15},{"ruleId":"99","severity":1,"message":"104","line":14,"column":22,"nodeType":"101","endLine":19,"endColumn":11},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'blogPostRequest' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Link' is defined but never used.","'Image' is defined but never used.","Assignments to the 'userRequest' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation"]