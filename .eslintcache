[{"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js":"1","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js":"2","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js":"3","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js":"4","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js":"5","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js":"6","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js":"7","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js":"8","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostShow.js":"9","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Navigation.js":"10","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserIndex.js":"11","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserNew.js":"12","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserUpdate.js":"13","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Login.js":"14"},{"size":677,"mtime":1610555346051,"results":"15","hashOfConfig":"16"},{"size":1944,"mtime":1612207053698,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609968287860,"results":"18","hashOfConfig":"16"},{"size":586,"mtime":1611960029948,"results":"19","hashOfConfig":"16"},{"size":3097,"mtime":1610734995793,"results":"20","hashOfConfig":"16"},{"size":1636,"mtime":1612842328238,"results":"21","hashOfConfig":"16"},{"size":3293,"mtime":1612842419287,"results":"22","hashOfConfig":"16"},{"size":3275,"mtime":1611873519909,"results":"23","hashOfConfig":"16"},{"size":1746,"mtime":1611878418375,"results":"24","hashOfConfig":"16"},{"size":1918,"mtime":1611959100427,"results":"25","hashOfConfig":"16"},{"size":1125,"mtime":1612842591045,"results":"26","hashOfConfig":"16"},{"size":2909,"mtime":1611099308035,"results":"27","hashOfConfig":"16"},{"size":2951,"mtime":1611789569596,"results":"28","hashOfConfig":"16"},{"size":0,"mtime":1611082491437,"results":"29","hashOfConfig":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1xd7ba4",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oalek4","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js",[],["68","69"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js",["70","71","72"],"import React, { useState } from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Header() {\n\n  const [isDark, setIsDark] = useState(\"false\");\n\n  const handleDarkMode = () => {\n    setIsDark(!isDark)\n    console.log(isDark)\n  };\n\n    return (\n        <Jumbotron class=\"header\">\n            <div>\n            <h1 class=\"header-jumbo\">I Like Felix Valotton</h1>\n            </div>\n            <h1>This is my blog about Felix Valotton</h1>\n        </Jumbotron>\n    )\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js",["73","74"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { createBlogPost } from '../Services/DatabaseCalls.js';\n\n\nexport default function BlogPostNew() {\n  const [title, setTitle] = useState(\"\");\n  const [blurb, setBlurb] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  // const [wordCount, setWordCount] = useState(\"\");\n  // const [likeCount, setLikeCount] = useState(\"\");\n\n  // const handleChange = (event) => {\n  //   const target = event.target;\n  //   const value = target.type === 'checkbox' ? target.checked : target.value;\n  //   const name = target.name;\n  //   setName(value);\n  // }\n\n  const resetValues = () => {\n    setTitle(\"\");\n    setBlurb(\"\");\n    setArtist(\"\");\n    setImageUrl(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      createBlogPost({\n        title: title,\n        blurb: blurb,\n        artist: artist,\n        image_url: imageUrl\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Add New Felix Valotton Content!\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control \n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              placeholder=\"title\"\n              type=\"text\"\n              name=\"title\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Blurb</Form.Label>\n            <Form.Control \n              value={blurb}\n              onChange={e => setBlurb(e.target.value)}\n              placeholder=\"blurb\"\n              type=\"text\"\n              name=\"blurb\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control \n              value={artist}\n              onChange={e => setArtist(e.target.value)}\n              placeholder=\"artist\"\n              type=\"text\"\n              name=\"artist\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control \n              value={imageUrl}\n              onChange={e => setImageUrl(e.target.value)}\n              placeholder=\"image url\"\n              type=\"text\"\n              name=\"imageUrl\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Add Blog Post\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js",["75","76","77"],"import React, {useState, useEffect} from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport { getBlogPosts, useBlogPostIndexStore } from '../Services/DatabaseCalls.js';\nimport { Link } from 'react-router-dom';\n\nexport default function BlogPostIndex() {\n\n  // const [blogPosts, setBlogPosts] = useState([])\n  // const [error, setError] = useState([])\n\n  const getBlogPosts = useBlogPostIndexStore(state => state.axiosRequest)\n  const blogPosts = useBlogPostIndexStore(state => state.blogPosts)\n  const errors = useBlogPostIndexStore(state => state.errors)\n  const loading = useBlogPostIndexStore(state => state.loading)\n  \n  useEffect(() => {\n    getBlogPosts()\n  }, []);\n\n  // useEffect(() => \n  //   {setBlogPosts(blogPostsRequest)}, [blogPostsRequest]\n  // );\n\n    if (loading) {\n      return <div>Loading...</div>\n    }\n    if (errors.length > 0) {\n      return <div>\"Something went wrong.\"</div>\n    }\n    return (\n      <div>\n        {blogPosts.map(blogPost => \n          <Card className=\"dark:bg-blue-500 card\">\n            <Card.Header>\n              <Link\n                  to={`/blog_posts/${blogPost.id}`}\n                >\n                  {blogPost.title}\n              </Link>\n            </Card.Header>\n            <Card.Body>\n              <Image src={blogPost.image_url} style={{maxWidth: \"40%\", maxHeight: \"auto\"}} thumbnail fluid />\n              <h3>{blogPost.artist}</h3>\n              <h3>{blogPost.year}</h3>\n              <h3>{blogPost.like_count} visitors liked this painting.</h3>\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n      );\n  };","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js",["78","79","80"],"import React, { useState, useEffect } from 'react';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { updateBlogPost, getBlogPost } from '../Services/DatabaseCalls.js';\n\n\nexport default function BlogPostUpdate() {\n  \n  const [error, setError] = useState([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [blurb, setBlurb] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const { id } = useParams()\n\n  useEffect(() =>\n    {\n      getBlogPost(id)\n        .then(response => {\n        console.log(\"blog post:\",response)\n        // setTitle(response.data.title)\n        // setBlurb(response.data.blurb)\n        // setArtist(response.data.artist)\n        // setImageUrl(response.data.image_url)\n      })\n      .catch(error => {\n        setError(\"Something went wrong.\")\n      })\n  }, []);\n\n  const resetValues = () => {\n    setTitle(\"\");\n    setBlurb(\"\");\n    setArtist(\"\");\n    setImageUrl(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n\n      updateBlogPost({\n        id,\n        title,\n        blurb,\n        artist,\n        image_url: imageUrl\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n    }\n\n  return (\n    <Card>\n      <Card.Header>Update Painting Info\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control \n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              placeholder={title}\n              type=\"text\"\n              name=\"title\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Blurb</Form.Label>\n            <Form.Control \n              value={blurb}\n              onChange={e => setBlurb(e.target.value)}\n              placeholder={blurb}\n              type=\"text\"\n              name=\"blurb\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control \n              value={artist}\n              onChange={e => setArtist(e.target.value)}\n              placeholder={artist}\n              type=\"text\"\n              name=\"artist\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control \n              value={imageUrl}\n              onChange={e => setImageUrl(e.target.value)}\n              placeholder={imageUrl}\n              type=\"text\"\n              name=\"imageUrl\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Update Blog Post\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostShow.js",["81","82","83","84","85","86","87","88","89","90"],"import React, { useState, useEffect } from 'react';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport { getBlogPost } from '../Services/DatabaseCalls.js';\n\nexport default function BlogPostShow() {\n\n    const [error, setError] = useState([]);\n\n    const [blogPost, setBlogPost] = useState(\"\");\n\n    const [title, setTitle] = useState(\"\");\n    const [blurb, setBlurb] = useState(\"\");\n    const [artist, setArtist] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    const { id } = useParams()\n\n    let blogPostRequest\n\n    useEffect(() =>\n        {\n        blogPostRequest = getBlogPost(id)\n            .then(response => {\n            console.log(\"blog post:\",response)\n            setBlogPost(response)\n            // setTitle(response.title)\n            // setBlurb(response.blurb)\n            // setArtist(response.artist)\n            // setImageUrl(response.image_url)\n        })\n        .catch(error => {\n            setError(\"Something went wrong.\")\n        })\n    }, []);\n\n    useEffect(() => \n    {setBlogPost(blogPostRequest)}, [blogPostRequest]\n  );\n\n  if (!blogPost) {\n    return <div>Loading...</div>\n  } else {\n  return (\n      <div className=\"container\">\n        <Card>\n            <Card.Header>\n            <h1>{title}</h1>\n            </Card.Header>\n            <Card.Body>\n            <Image src={blogPost.image_url} style={{maxWidth: \"100%\", maxHeight: \"auto\"}} thumbnail fluid />\n            <h3>{blogPost.artist}</h3>\n            <h3>{blogPost.year}</h3>\n            <h3>{blogPost.like_count} visitors liked this painting.</h3>\n            </Card.Body>\n        </Card>\n      </div>\n    );\n    }\n}\n","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Navigation.js",["91","92"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nfunction Navigation() {\n    return (\n        <Navbar class=\"navvy\" expand=\"lg\" sticky=\"top\">\n          <ul>\n              <div>\n              {localStorage.token && localStorage.user_id ? (\n                  <Nav className=\"mr-auto\">\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/blog_posts\">Gallery</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/blog_posts-new\">Hang Painting</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/blog_posts-new\">Hang Painting</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/users\">See Favorite Galleries</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                    ) : (\n                  <Nav>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/login\">Login</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/user-new\">Sign Up</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/user-update\">Update User</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                )}\n                </div>\n          </ul>\n        </Navbar>\n    );\n}\n\nexport default withRouter(Navigation);\n","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserIndex.js",["93","94","95","96","97"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserNew.js",["98","99"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { createUser } from '../Services/DatabaseCalls.js';\n\n\nexport default function UserNew() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const resetValues = () => {\n    setUserName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setPasswordConfirmation(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      createUser({\n        userName: userName,\n        email: email,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Add New User!\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>User Name</Form.Label>\n            <Form.Control \n              value={userName}\n              onChange={e => setUserName(e.target.value)}\n              placeholder=\"userName\"\n              type=\"text\"\n              name=\"userName\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              placeholder=\"email\"\n              type=\"text\"\n              name=\"email\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder=\"password\"\n              type=\"text\"\n              name=\"password\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control \n              value={passwordConfirmation}\n              onChange={e => setPasswordConfirmation(e.target.value)}\n              placeholder=\"password confirmation\"\n              type=\"text\"\n              name=\"passwordConfirmation\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Add New User\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserUpdate.js",["100","101"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { updateUser } from '../Services/DatabaseCalls.js';\n\n\nexport default function UserUpdate() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const resetValues = () => {\n    setUserName(userName);\n    setEmail(email);\n    setPassword(password);\n    setPasswordConfirmation(passwordConfirmation);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      updateUser({\n        userName: userName,\n        email: email,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Update Your User Info\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>User Name</Form.Label>\n            <Form.Control \n              value={userName}\n              onChange={e => setUserName(e.target.value)}\n              placeholder={userName}\n              type=\"text\"\n              name=\"userName\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              placeholder={email}\n              type=\"text\"\n              name=\"email\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder={password}\n              type=\"text\"\n              name=\"password\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control \n              value={passwordConfirmation}\n              onChange={e => setPasswordConfirmation(e.target.value)}\n              placeholder={passwordConfirmation}\n              type=\"text\"\n              name=\"passwordConfirmation\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Update Info\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Login.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":10,"column":9,"nodeType":"108","messageId":"109","endLine":10,"endColumn":23},{"ruleId":"106","severity":1,"message":"112","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"113","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"114","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},{"ruleId":"106","severity":1,"message":"115","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":19,"column":6,"nodeType":"118","endLine":19,"endColumn":8,"suggestions":"119"},{"ruleId":"106","severity":1,"message":"113","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":13},{"ruleId":"106","severity":1,"message":"120","line":12,"column":10,"nodeType":"108","messageId":"109","endLine":12,"endColumn":15},{"ruleId":"116","severity":1,"message":"121","line":34,"column":6,"nodeType":"118","endLine":34,"endColumn":8,"suggestions":"122"},{"ruleId":"106","severity":1,"message":"113","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":13},{"ruleId":"106","severity":1,"message":"120","line":10,"column":12,"nodeType":"108","messageId":"109","endLine":10,"endColumn":17},{"ruleId":"106","severity":1,"message":"123","line":14,"column":19,"nodeType":"108","messageId":"109","endLine":14,"endColumn":27},{"ruleId":"106","severity":1,"message":"124","line":15,"column":12,"nodeType":"108","messageId":"109","endLine":15,"endColumn":17},{"ruleId":"106","severity":1,"message":"125","line":15,"column":19,"nodeType":"108","messageId":"109","endLine":15,"endColumn":27},{"ruleId":"106","severity":1,"message":"126","line":16,"column":12,"nodeType":"108","messageId":"109","endLine":16,"endColumn":18},{"ruleId":"106","severity":1,"message":"127","line":16,"column":20,"nodeType":"108","messageId":"109","endLine":16,"endColumn":29},{"ruleId":"106","severity":1,"message":"128","line":17,"column":12,"nodeType":"108","messageId":"109","endLine":17,"endColumn":20},{"ruleId":"106","severity":1,"message":"129","line":17,"column":22,"nodeType":"108","messageId":"109","endLine":17,"endColumn":33},{"ruleId":"116","severity":1,"message":"130","line":25,"column":27,"nodeType":"131","endLine":36,"endColumn":11},{"ruleId":"106","severity":1,"message":"112","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"132","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"114","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},{"ruleId":"106","severity":1,"message":"133","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":13},{"ruleId":"106","severity":1,"message":"134","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"135","line":21,"column":8,"nodeType":"118","endLine":21,"endColumn":10,"suggestions":"136"},{"ruleId":"106","severity":1,"message":"112","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"113","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"112","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"113","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'handleDarkMode' is assigned a value but never used.","'Component' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'getBlogPosts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBlogPosts'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["140"],"'setTitle' is assigned a value but never used.","'blurb' is assigned a value but never used.","'setBlurb' is assigned a value but never used.","'artist' is assigned a value but never used.","'setArtist' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","Assignments to the 'blogPostRequest' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Link' is defined but never used.","'Image' is defined but never used.","'getUsers' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [getBlogPosts]",{"range":"148","text":"149"},"Update the dependencies array to be: [id]",{"range":"150","text":"151"},"Update the dependencies array to be: [getUsers]",{"range":"152","text":"153"},[715,717],"[getBlogPosts]",[1003,1005],"[id]",[699,701],"[getUsers]"]