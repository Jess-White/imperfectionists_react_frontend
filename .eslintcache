[{"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js":"1","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js":"2","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js":"3","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js":"4","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js":"5","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js":"6","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js":"7","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js":"8"},{"size":677,"mtime":1610555346051,"results":"9","hashOfConfig":"10"},{"size":418,"mtime":1610735337189,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609968287860,"results":"12","hashOfConfig":"10"},{"size":464,"mtime":1609975545812,"results":"13","hashOfConfig":"10"},{"size":3097,"mtime":1610734995793,"results":"14","hashOfConfig":"10"},{"size":1313,"mtime":1610637420866,"results":"15","hashOfConfig":"10"},{"size":581,"mtime":1610730507531,"results":"16","hashOfConfig":"10"},{"size":2978,"mtime":1610735373744,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1oalek4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js",[],["36","37"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js",["38"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js",["39","40"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js",["41","42","43"],"import React, {useState, useEffect} from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport { getBlogPosts } from '../Services/DatabaseCalls.js';\nimport Button from 'react-bootstrap/Button';\n\nexport default function BlogPostIndex() {\n\n  const [blogPosts, setBlogPosts] = useState([])\n  const [error, setError] = useState([])\n  let blogPostRequest\n  \n  useEffect(() => \n      {blogPostRequest = getBlogPosts()\n        .then(response => {\n          setBlogPosts(response)\n        }).catch(error => {\n          setError(\"Something went wrong.\")\n        })\n      }, []);\n\n  useEffect(() => {setBlogPosts(blogPostRequest)}, [blogPostRequest]);\n\n    if (!blogPosts.map) {\n      return <div>Loading...</div>\n    }\n    else {\n      return (\n        <div>\n          {blogPosts.map(blogPost => \n            <Card>\n              <Card.Header><h1>{blogPost.title}</h1></Card.Header>\n              <Card.Body>\n                <Image src={blogPost.image_url} style={{maxWidth: \"40%\", maxHeight: \"auto\"}} thumbnail fluid />\n                <h3>{blogPost.artist}</h3>\n                <h3>{blogPost.year}</h3>\n                <h3>{blogPost.like_count} visitors liked this painting.</h3>\n              </Card.Body>\n            </Card>\n          )}\n        </div>\n      );\n    }\n  };","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js",["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"55","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"50","severity":1,"message":"56","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":14},{"ruleId":"50","severity":1,"message":"57","line":10,"column":10,"nodeType":"52","messageId":"53","endLine":10,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":14,"column":26,"nodeType":"60","endLine":19,"endColumn":11},{"ruleId":"50","severity":1,"message":"54","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"55","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'BlogPostIndex' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'blogPostRequest' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]