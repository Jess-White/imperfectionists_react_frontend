[{"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js":"1","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js":"2","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js":"3","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js":"4","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js":"5","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js":"6","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js":"7","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js":"8","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostShow.js":"9","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Navigation.js":"10","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserIndex.js":"11","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserNew.js":"12","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserUpdate.js":"13","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Login.js":"14","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostSearch.js":"15"},{"size":677,"mtime":1610555346051,"results":"16","hashOfConfig":"17"},{"size":2085,"mtime":1613078898776,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609968287860,"results":"19","hashOfConfig":"17"},{"size":586,"mtime":1611960029948,"results":"20","hashOfConfig":"17"},{"size":3120,"mtime":1612899493542,"results":"21","hashOfConfig":"17"},{"size":1439,"mtime":1613078886612,"results":"22","hashOfConfig":"17"},{"size":4109,"mtime":1613078799585,"results":"23","hashOfConfig":"17"},{"size":3275,"mtime":1611873519909,"results":"24","hashOfConfig":"17"},{"size":1766,"mtime":1613079805459,"results":"25","hashOfConfig":"17"},{"size":2124,"mtime":1612986701934,"results":"26","hashOfConfig":"17"},{"size":1125,"mtime":1612842591045,"results":"27","hashOfConfig":"17"},{"size":2909,"mtime":1611099308035,"results":"28","hashOfConfig":"17"},{"size":2951,"mtime":1611789569596,"results":"29","hashOfConfig":"17"},{"size":0,"mtime":1611082491437,"results":"30","hashOfConfig":"31"},{"size":2620,"mtime":1612987047559,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1xd7ba4",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oalek4",{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js",[],["72","73"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js",["74","75","76"],"import React, { useState } from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Header() {\n\n  const [isDark, setIsDark] = useState(\"false\");\n\n  const handleDarkMode = () => {\n    setIsDark(!isDark)\n    console.log(isDark)\n  };\n\n    return (\n        <Jumbotron class=\"header\">\n            <div>\n            <h1 class=\"header-jumbo\">I Like Felix Valotton</h1>\n            </div>\n            <h1>This is my blog about Felix Valotton</h1>\n        </Jumbotron>\n    )\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js",["77","78","79"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { createBlogPost, useBlogPostCreateStore } from '../Services/DatabaseCalls.js';\n\nexport default function BlogPostNew() {\n  const [title, setTitle] = useState(\"\");\n  const [blurb, setBlurb] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  // const [wordCount, setWordCount] = useState(\"\");\n  // const [likeCount, setLikeCount] = useState(\"\");\n\n  // const handleChange = (event) => {\n  //   const target = event.target;\n  //   const value = target.type === 'checkbox' ? target.checked : target.value;\n  //   const name = target.name;\n  //   setName(value);\n  // }\n\n  const resetValues = () => {\n    setTitle(\"\");\n    setBlurb(\"\");\n    setArtist(\"\");\n    setImageUrl(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      createBlogPost({\n        title: title,\n        blurb: blurb,\n        artist: artist,\n        image_url: imageUrl\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Add New Felix Valotton Content!\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control \n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              placeholder=\"title\"\n              type=\"text\"\n              name=\"title\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Blurb</Form.Label>\n            <Form.Control \n              value={blurb}\n              onChange={e => setBlurb(e.target.value)}\n              placeholder=\"blurb\"\n              type=\"text\"\n              name=\"blurb\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control \n              value={artist}\n              onChange={e => setArtist(e.target.value)}\n              placeholder=\"artist\"\n              type=\"text\"\n              name=\"artist\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control \n              value={imageUrl}\n              onChange={e => setImageUrl(e.target.value)}\n              placeholder=\"image url\"\n              type=\"text\"\n              name=\"imageUrl\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Add Blog Post\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js",["80","81"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js",["82","83","84"],"import React, { useState, useEffect } from 'react';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { updateBlogPost, getBlogPost } from '../Services/DatabaseCalls.js';\n\n\nexport default function BlogPostUpdate() {\n  \n  const [error, setError] = useState([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [blurb, setBlurb] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const { id } = useParams()\n\n  useEffect(() =>\n    {\n      getBlogPost(id)\n        .then(response => {\n        console.log(\"blog post:\",response)\n        // setTitle(response.data.title)\n        // setBlurb(response.data.blurb)\n        // setArtist(response.data.artist)\n        // setImageUrl(response.data.image_url)\n      })\n      .catch(error => {\n        setError(\"Something went wrong.\")\n      })\n  }, []);\n\n  const resetValues = () => {\n    setTitle(\"\");\n    setBlurb(\"\");\n    setArtist(\"\");\n    setImageUrl(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n\n      updateBlogPost({\n        id,\n        title,\n        blurb,\n        artist,\n        image_url: imageUrl\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n    }\n\n  return (\n    <Card>\n      <Card.Header>Update Painting Info\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control \n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              placeholder={title}\n              type=\"text\"\n              name=\"title\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Blurb</Form.Label>\n            <Form.Control \n              value={blurb}\n              onChange={e => setBlurb(e.target.value)}\n              placeholder={blurb}\n              type=\"text\"\n              name=\"blurb\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control \n              value={artist}\n              onChange={e => setArtist(e.target.value)}\n              placeholder={artist}\n              type=\"text\"\n              name=\"artist\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control \n              value={imageUrl}\n              onChange={e => setImageUrl(e.target.value)}\n              placeholder={imageUrl}\n              type=\"text\"\n              name=\"imageUrl\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Update Blog Post\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostShow.js",["85","86","87","88","89"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Navigation.js",["90"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nfunction Navigation() {\n    return (\n        <Navbar class=\"navvy\" expand=\"lg\" sticky=\"top\">\n          <ul>\n              <div>\n              {localStorage.token && localStorage.user_id ? (\n                  <Nav className=\"mr-auto\">\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/blog_posts\">Gallery</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link as={Link} to=\"/blog_posts-search\">Search Gallery</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/blog_posts-new\">Hang Painting</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/blog_posts-update\">Update Painting</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/users\">See Favorite Galleries</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                    ) : (\n                  <Nav>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/login\">Login</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/user/new\">Sign Up</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item style={{fontSize: \"150%\"}} className=\"active\">\n                      <Nav.Link href=\"/user/update\">Update User</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                )}\n                </div>\n          </ul>\n        </Navbar>\n    );\n}\n\nexport default withRouter(Navigation);\n","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserIndex.js",["91","92","93","94","95"],"import React, {useState, useEffect} from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport { getUsers, useUserIndexStore } from '../Services/DatabaseCalls.js';\nimport Button from 'react-bootstrap/Button';\n\nexport default function UserIndex() {\n\n  // const [users, setUsers] = useState([])\n  // const [error, setError] = useState([])\n  // let userRequest\n\n  const getUsers = useUserIndexStore(state => state.axiosRequest)\n  const users = useUserIndexStore(state => state.users)\n  const errors = useUserIndexStore(state => state.errors)\n  const loading = useUserIndexStore(state => state.loading)\n  \n    \n    useEffect(() => {\n      getUsers()\n    }, []);\n\n    if (loading) {\n      return <div>Loading...</div>\n    }\n    if (errors.length > 0) {\n      return <div>\"Somethiing went wrong.\"</div>\n    }\n    else {\n      return (\n        <div>\n          {users.map(user => \n            <Card>\n              <Card.Header><h1>{user.user_name}</h1></Card.Header>\n              <Card.Body>\n              </Card.Body>\n            </Card>\n          )}\n        </div>\n      );\n    }\n  };","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserNew.js",["96","97"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { createUser } from '../Services/DatabaseCalls.js';\n\n\nexport default function UserNew() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const resetValues = () => {\n    setUserName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setPasswordConfirmation(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      createUser({\n        userName: userName,\n        email: email,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Add New User!\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>User Name</Form.Label>\n            <Form.Control \n              value={userName}\n              onChange={e => setUserName(e.target.value)}\n              placeholder=\"userName\"\n              type=\"text\"\n              name=\"userName\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              placeholder=\"email\"\n              type=\"text\"\n              name=\"email\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder=\"password\"\n              type=\"text\"\n              name=\"password\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control \n              value={passwordConfirmation}\n              onChange={e => setPasswordConfirmation(e.target.value)}\n              placeholder=\"password confirmation\"\n              type=\"text\"\n              name=\"passwordConfirmation\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Add New User\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/UserUpdate.js",["98","99"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { updateUser } from '../Services/DatabaseCalls.js';\n\n\nexport default function UserUpdate() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const resetValues = () => {\n    setUserName(userName);\n    setEmail(email);\n    setPassword(password);\n    setPasswordConfirmation(passwordConfirmation);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      updateUser({\n        userName: userName,\n        email: email,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Update Your User Info\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>User Name</Form.Label>\n            <Form.Control \n              value={userName}\n              onChange={e => setUserName(e.target.value)}\n              placeholder={userName}\n              type=\"text\"\n              name=\"userName\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              placeholder={email}\n              type=\"text\"\n              name=\"email\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder={password}\n              type=\"text\"\n              name=\"password\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control \n              value={passwordConfirmation}\n              onChange={e => setPasswordConfirmation(e.target.value)}\n              placeholder={passwordConfirmation}\n              type=\"text\"\n              name=\"passwordConfirmation\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Update Info\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Login.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostSearch.js",["100","101","102"],"import React, {useState, useEffect} from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useBlogPostIndexStore } from '../Services/DatabaseCalls.js';\nimport { Link } from 'react-router-dom';\n\nexport default function BlogPostSearch() {\n  console.log('blog search page')\n\n  const [searchParam, setSearchParam] = useState(\"\")\n\n  const searchBlogPosts = useBlogPostIndexStore(state => state.axiosSearchRequest)\n  const blogPosts = useBlogPostIndexStore(state => state.blogPosts)\n  const errors = useBlogPostIndexStore(state => state.errors)\n  const loading = useBlogPostIndexStore(state => state.loading)\n  const searchResults = useBlogPostIndexStore(state => state.searchResults)\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n    searchBlogPosts(searchParam);\n    console.log('query sent')\n  }\n\n\n    if (loading) {\n      return <div>Loading...</div>\n    }\n    // if (errors.length > 0) {\n    //   return <div>\"Something went wrong.\"</div>\n    // }\n    return (\n      <div>\n          <Card>\n            <Card.Header>Search Paintings\n            </Card.Header>\n            <Card.Body>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Search Paintings</Form.Label>\n                        <Form.Control \n                        value={searchParam}\n                        onChange={e => setSearchParam(e.target.value)}\n                        placeholder=\"title\"\n                        type=\"text\"\n                        name=\"searchParam\"\n                        required\n                        />\n                    </Form.Group>\n                    <Button onClick={handleSubmit}>Search</Button>\n                </Form>\n            </Card.Body>\n          </Card>\n        {searchResults && (\n          <>\n          {searchResults.map(searchResult => \n          <Card className=\"dark:bg-blue-500 card\">\n            <Card.Header>\n              <Link\n                  to={`/blog_posts/${searchResult.id}`}\n                >\n                  {searchResult.title}\n              </Link>\n            </Card.Header>\n            <Card.Body>\n              <Image src={searchResult.image_url} style={{maxWidth: \"40%\", maxHeight: \"auto\"}} thumbnail fluid />\n              <h3>{searchResult.artist}</h3>\n              <h3>{searchResult.year}</h3>\n              <h3>{searchResult.like_count} visitors liked this painting.</h3>\n            </Card.Body>\n          </Card>\n        )}\n        </>\n        )}\n      </div>\n      );\n  };",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":14},{"ruleId":"107","severity":1,"message":"112","line":10,"column":9,"nodeType":"109","messageId":"110","endLine":10,"endColumn":23},{"ruleId":"107","severity":1,"message":"113","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"114","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"115","line":6,"column":26,"nodeType":"109","messageId":"110","endLine":6,"endColumn":48},{"ruleId":"107","severity":1,"message":"116","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":16,"column":6,"nodeType":"119","endLine":16,"endColumn":8,"suggestions":"120"},{"ruleId":"107","severity":1,"message":"114","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"121","line":12,"column":10,"nodeType":"109","messageId":"110","endLine":12,"endColumn":15},{"ruleId":"117","severity":1,"message":"122","line":34,"column":6,"nodeType":"119","endLine":34,"endColumn":8,"suggestions":"123"},{"ruleId":"107","severity":1,"message":"114","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"124","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":21},{"ruleId":"107","severity":1,"message":"125","line":12,"column":11,"nodeType":"109","messageId":"110","endLine":12,"endColumn":17},{"ruleId":"107","severity":1,"message":"126","line":13,"column":11,"nodeType":"109","messageId":"110","endLine":13,"endColumn":18},{"ruleId":"117","severity":1,"message":"127","line":25,"column":8,"nodeType":"119","endLine":25,"endColumn":10,"suggestions":"128"},{"ruleId":"107","severity":1,"message":"113","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"116","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"129","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"130","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"117","severity":1,"message":"131","line":21,"column":8,"nodeType":"119","endLine":21,"endColumn":10,"suggestions":"132"},{"ruleId":"107","severity":1,"message":"113","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"114","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"113","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"114","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"133","line":1,"column":26,"nodeType":"109","messageId":"110","endLine":1,"endColumn":35},{"ruleId":"107","severity":1,"message":"134","line":15,"column":9,"nodeType":"109","messageId":"110","endLine":15,"endColumn":18},{"ruleId":"107","severity":1,"message":"125","line":16,"column":9,"nodeType":"109","messageId":"110","endLine":16,"endColumn":15},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'handleDarkMode' is assigned a value but never used.","'Component' is defined but never used.","'axios' is defined but never used.","'useBlogPostCreateStore' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBlogPosts'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["138"],"'getBlogPost' is defined but never used.","'errors' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getBlogPost' and 'id'. Either include them or remove the dependency array.",["139"],"'Image' is defined but never used.","'getUsers' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["140"],"'useEffect' is defined but never used.","'blogPosts' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [getBlogPosts]",{"range":"149","text":"150"},"Update the dependencies array to be: [id]",{"range":"151","text":"152"},"Update the dependencies array to be: [getBlogPost, id]",{"range":"153","text":"154"},"Update the dependencies array to be: [getUsers]",{"range":"155","text":"156"},[609,611],"[getBlogPosts]",[1003,1005],"[id]",[986,988],"[getBlogPost, id]",[699,701],"[getUsers]"]