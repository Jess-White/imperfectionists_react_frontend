[{"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js":"1","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js":"2","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js":"3","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js":"4","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js":"5","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js":"6","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js":"7","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js":"8","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostShow.js":"9","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Navigation.js":"10"},{"size":677,"mtime":1610555346051,"results":"11","hashOfConfig":"12"},{"size":1045,"mtime":1610756219616,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609968287860,"results":"14","hashOfConfig":"12"},{"size":464,"mtime":1609975545812,"results":"15","hashOfConfig":"12"},{"size":3097,"mtime":1610734995793,"results":"16","hashOfConfig":"12"},{"size":1313,"mtime":1610637420866,"results":"17","hashOfConfig":"12"},{"size":581,"mtime":1610730507531,"results":"18","hashOfConfig":"12"},{"size":2978,"mtime":1610735373744,"results":"19","hashOfConfig":"12"},{"size":0,"mtime":1609972184147,"results":"20","hashOfConfig":"12"},{"size":818,"mtime":1610756258053,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1oalek4",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/index.js",[],["46","47"],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/App.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/reportWebVitals.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Header.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostNew.js",["48","49"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { createBlogPost } from '../Services/DatabaseCalls.js';\n\n\nexport default function BlogPostNew() {\n  const [title, setTitle] = useState(\"\");\n  const [blurb, setBlurb] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  // const [wordCount, setWordCount] = useState(\"\");\n  // const [likeCount, setLikeCount] = useState(\"\");\n\n  // const handleChange = (event) => {\n  //   const target = event.target;\n  //   const value = target.type === 'checkbox' ? target.checked : target.value;\n  //   const name = target.name;\n  //   setName(value);\n  // }\n\n  const resetValues = () => {\n    setTitle(\"\");\n    setBlurb(\"\");\n    setArtist(\"\");\n    setImageUrl(\"\");\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      createBlogPost({\n        title: title,\n        blurb: blurb,\n        artist: artist,\n        image_url: imageUrl\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Add New Felix Valotton Content!\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control \n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              placeholder=\"title\"\n              type=\"text\"\n              name=\"title\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Blurb</Form.Label>\n            <Form.Control \n              value={blurb}\n              onChange={e => setBlurb(e.target.value)}\n              placeholder=\"blurb\"\n              type=\"text\"\n              name=\"blurb\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control \n              value={artist}\n              onChange={e => setArtist(e.target.value)}\n              placeholder=\"artist\"\n              type=\"text\"\n              name=\"artist\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control \n              value={imageUrl}\n              onChange={e => setImageUrl(e.target.value)}\n              placeholder=\"image url\"\n              type=\"text\"\n              name=\"imageUrl\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Add Blog Post\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostIndex.js",["50","51","52"],"import React, {useState, useEffect} from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport { getBlogPosts } from '../Services/DatabaseCalls.js';\nimport Button from 'react-bootstrap/Button';\n\nexport default function BlogPostIndex() {\n\n  const [blogPosts, setBlogPosts] = useState([])\n  const [error, setError] = useState([])\n  let blogPostRequest\n  \n  useEffect(() => \n      {blogPostRequest = getBlogPosts()\n        .then(response => {\n          setBlogPosts(response)\n        }).catch(error => {\n          setError(\"Something went wrong.\")\n        })\n      }, []);\n\n  useEffect(() => {setBlogPosts(blogPostRequest)}, [blogPostRequest]);\n\n    if (!blogPosts.map) {\n      return <div>Loading...</div>\n    }\n    else {\n      return (\n        <div>\n          {blogPosts.map(blogPost => \n            <Card>\n              <Card.Header><h1>{blogPost.title}</h1></Card.Header>\n              <Card.Body>\n                <Image src={blogPost.image_url} style={{maxWidth: \"40%\", maxHeight: \"auto\"}} thumbnail fluid />\n                <h3>{blogPost.artist}</h3>\n                <h3>{blogPost.year}</h3>\n                <h3>{blogPost.like_count} visitors liked this painting.</h3>\n              </Card.Body>\n            </Card>\n          )}\n        </div>\n      );\n    }\n  };","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Services/DatabaseCalls.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostUpdate.js",["53","54"],"import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { updateBlogPost } from '../Services/DatabaseCalls.js';\n\n\nexport default function BlogPostNew() {\n  const [title, setTitle] = useState(\"\");\n  const [blurb, setBlurb] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  // const [wordCount, setWordCount] = useState(\"\");\n  // const [likeCount, setLikeCount] = useState(\"\");\n\n  const resetValues = () => {\n    setTitle(title);\n    setBlurb(blurb);\n    setArtist(artist);\n    setImageUrl(imageUrl);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault() \n      updateBlogPost({\n        title: title,\n        blurb: blurb,\n        artist: artist,\n        image_url: imageUrl\n      })\n      .then(() => {\n        resetValues()\n      })\n      .catch(() => {\n        resetValues()\n      })\n  }\n\n  return (\n    <Card>\n      <Card.Header>Add New Felix Valotton Content!\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n        {/* <Form onSubmit={this.handleSubmit} ref={(el) => this.myFormRef = el}> */}\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control \n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              placeholder={title}\n              type=\"text\"\n              name=\"title\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Blurb</Form.Label>\n            <Form.Control \n              value={blurb}\n              onChange={e => setBlurb(e.target.value)}\n              placeholder={blurb}\n              type=\"text\"\n              name=\"blurb\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control \n              value={artist}\n              onChange={e => setArtist(e.target.value)}\n              placeholder={artist}\n              type=\"text\"\n              name=\"artist\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control \n              value={imageUrl}\n              onChange={e => setImageUrl(e.target.value)}\n              placeholder={imageUrl}\n              type=\"text\"\n              name=\"imageUrl\"\n              required\n            />\n          </Form.Group>\n          <Button \n            className=\"btn-lg\" \n            style={{\n              backgroundColor: \"#ffff1b\", \n              color: \"#000080\", \n              fontSize: \"20px\", \n              fontWeight: \"bold\",\n              marginTop: \"2%\"\n            }} \n            type=\"submit\"\n          >\n            Add Blog Post\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/BlogPostShow.js",[],"/Users/jesswhite/Desktop/Actualize/imperfectionists_react_frontend/src/Components/Navigation.js",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":14},{"ruleId":"61","severity":1,"message":"67","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":14,"column":26,"nodeType":"70","endLine":19,"endColumn":11},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"71","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Button' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'blogPostRequest' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]